Server is running on port 5001
Executing (default): SELECT 1+1 AS result
Connected to PostgreSQL
Available models before sync: [ 'User', 'Entry', 'Tag', 'EntryTag', 'Comment' ]
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'travelDB'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("username");ALTER TABLE "Users" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Entries'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Entries' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Entries' AND tc.table_catalog = 'travelDB'
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "title" TYPE VARCHAR(500);
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "location" SET NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "location" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "location" TYPE VARCHAR(1000);
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "date" TYPE DATE;
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "memo" DROP NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "memo" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "memo" TYPE TEXT;
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "imageURL" DROP NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "imageURL" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "imageURL" TYPE TEXT;
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "latitude" DROP NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "latitude" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "latitude" TYPE FLOAT;
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "longitude" DROP NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "longitude" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "longitude" TYPE FLOAT;
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Entries" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Entries" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Entries" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Entries" DROP CONSTRAINT "Entries_UserId_fkey"
Executing (default): ALTER TABLE "Entries"  ADD FOREIGN KEY ("UserId") REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Entries' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Tags'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Tags' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Tags' AND tc.table_catalog = 'travelDB'
Executing (default): ALTER TABLE "Tags" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Tags" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Tags"  ADD UNIQUE ("name");ALTER TABLE "Tags" ALTER COLUMN "name" TYPE VARCHAR(500)  ;
Executing (default): ALTER TABLE "Tags" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Tags" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Tags" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Tags" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Tags" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Tags" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tags' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'EntryTags'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'EntryTags' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'EntryTags' AND tc.table_catalog = 'travelDB'
Executing (default): ALTER TABLE "EntryTags" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "EntryTags" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "EntryTags" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "EntryTags" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "EntryTags" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "EntryTags" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'EntryTags' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Comments'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Comments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Comments' AND tc.table_catalog = 'travelDB'
Executing (default): ALTER TABLE "Comments" ALTER COLUMN "commentText" SET NOT NULL;ALTER TABLE "Comments" ALTER COLUMN "commentText" DROP DEFAULT;ALTER TABLE "Comments" ALTER COLUMN "commentText" TYPE TEXT;
Executing (default): ALTER TABLE "Comments" ALTER COLUMN "author" DROP NOT NULL;ALTER TABLE "Comments" ALTER COLUMN "author" DROP DEFAULT;ALTER TABLE "Comments" ALTER COLUMN "author" TYPE VARCHAR(500);
Executing (default): ALTER TABLE "Comments" ALTER COLUMN "timestamp" DROP NOT NULL;ALTER TABLE "Comments" ALTER COLUMN "timestamp" DROP DEFAULT;ALTER TABLE "Comments" ALTER COLUMN "timestamp" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Comments" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Comments" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Comments" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Comments" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Comments" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Comments" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Comments" DROP CONSTRAINT "Comments_EntryId_fkey"
Executing (default): ALTER TABLE "Comments"  ADD FOREIGN KEY ("EntryId") REFERENCES "Entries" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Comments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Database synced - Tables are ready
Models after sync: [ 'User', 'Entry', 'Tag', 'EntryTag', 'Comment' ]
Executing (default): INSERT INTO "Entries" ("id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId";
Executing (default): INSERT INTO "Entries" ("id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId";
Executing (default): SELECT "id", "title", "location", "date", "memo", "imageURL", "latitude", "longitude", "createdAt", "updatedAt", "UserId" FROM "Entries" AS "Entry";
Executing (default): INSERT INTO "Entries" ("id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId";
Executing (default): SELECT "id", "title", "location", "date", "memo", "imageURL", "latitude", "longitude", "createdAt", "updatedAt", "UserId" FROM "Entries" AS "Entry";
Executing (default): INSERT INTO "Entries" ("id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "id","title","location","date","memo","imageURL","latitude","longitude","createdAt","updatedAt","UserId";
Executing (default): SELECT "id", "title", "location", "date", "memo", "imageURL", "latitude", "longitude", "createdAt", "updatedAt", "UserId" FROM "Entries" AS "Entry";
